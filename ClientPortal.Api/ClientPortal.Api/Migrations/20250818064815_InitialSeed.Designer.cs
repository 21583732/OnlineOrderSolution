// <auto-generated />
using System;
using ClientPortal.Api.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClientPortal.Api.Migrations
{
    [DbContext(typeof(ClientPortalContext))]
    [Migration("20250818064815_InitialSeed")]
    partial class InitialSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClientPortal.Api.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ClientId")
                        .HasName("PK__Clients__E67E1A24A58CA6B6");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("ClientPortal.Api.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("New");

                    b.HasKey("OrderId")
                        .HasName("PK__Orders__C3905BCFEC7B3C75");

                    b.HasIndex("ClientId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ClientPortal.Api.Models.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("OrderItemId")
                        .HasName("PK__OrderIte__57ED06814EDB0D48");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("ClientPortal.Api.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("InStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("ProductId")
                        .HasName("PK__Products__B40CC6CD3D2F036E");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Description = "High-performance laptop with 15-inch display",
                            InStock = true,
                            Name = "Laptop Pro 15",
                            Price = 1499.99m
                        },
                        new
                        {
                            ProductId = 2,
                            Description = "Ergonomic wireless mouse",
                            InStock = true,
                            Name = "Wireless Mouse",
                            Price = 29.99m
                        },
                        new
                        {
                            ProductId = 3,
                            Description = "RGB backlit mechanical keyboard",
                            InStock = false,
                            Name = "Mechanical Keyboard",
                            Price = 89.99m
                        },
                        new
                        {
                            ProductId = 4,
                            Description = "4K UHD IPS monitor",
                            InStock = true,
                            Name = "27-inch Monitor",
                            Price = 349.99m
                        },
                        new
                        {
                            ProductId = 5,
                            Description = "Over-ear noise-cancelling headphones",
                            InStock = true,
                            Name = "Noise Cancelling Headphones",
                            Price = 199.99m
                        },
                        new
                        {
                            ProductId = 6,
                            Description = "Portable 1TB external SSD",
                            InStock = true,
                            Name = "External SSD 1TB",
                            Price = 129.99m
                        },
                        new
                        {
                            ProductId = 7,
                            Description = "Latest-gen smartphone with OLED display",
                            InStock = false,
                            Name = "Smartphone X",
                            Price = 999.99m
                        },
                        new
                        {
                            ProductId = 8,
                            Description = "Lightweight tablet with stylus support",
                            InStock = true,
                            Name = "Tablet Air 11",
                            Price = 599.99m
                        },
                        new
                        {
                            ProductId = 9,
                            Description = "Portable waterproof speaker",
                            InStock = true,
                            Name = "Bluetooth Speaker",
                            Price = 79.99m
                        },
                        new
                        {
                            ProductId = 10,
                            Description = "Fitness-focused smartwatch",
                            InStock = true,
                            Name = "Smartwatch S",
                            Price = 249.99m
                        },
                        new
                        {
                            ProductId = 11,
                            Description = "Ergonomic chair for long sessions",
                            InStock = true,
                            Name = "Gaming Chair",
                            Price = 199.99m
                        },
                        new
                        {
                            ProductId = 12,
                            Description = "High-resolution webcam for streaming",
                            InStock = true,
                            Name = "4K Webcam",
                            Price = 129.99m
                        },
                        new
                        {
                            ProductId = 13,
                            Description = "Immersive virtual reality headset",
                            InStock = true,
                            Name = "VR Headset",
                            Price = 399.99m
                        },
                        new
                        {
                            ProductId = 14,
                            Description = "High-capacity power bank",
                            InStock = true,
                            Name = "Portable Charger 20k mAh",
                            Price = 49.99m
                        },
                        new
                        {
                            ProductId = 15,
                            Description = "Compact drone with 4K camera",
                            InStock = true,
                            Name = "Drone 4K",
                            Price = 599.99m
                        },
                        new
                        {
                            ProductId = 16,
                            Description = "Voice-controlled smart hub",
                            InStock = true,
                            Name = "Smart Home Hub",
                            Price = 99.99m
                        },
                        new
                        {
                            ProductId = 17,
                            Description = "Next-gen gaming console",
                            InStock = true,
                            Name = "Gaming Console Z",
                            Price = 499.99m
                        },
                        new
                        {
                            ProductId = 18,
                            Description = "Foldable e-scooter with long range",
                            InStock = true,
                            Name = "Electric Scooter",
                            Price = 699.99m
                        },
                        new
                        {
                            ProductId = 19,
                            Description = "Wi-Fi enabled LED bulbs",
                            InStock = true,
                            Name = "Smart Light Bulb Pack",
                            Price = 59.99m
                        },
                        new
                        {
                            ProductId = 20,
                            Description = "Waterproof 4K action camera",
                            InStock = true,
                            Name = "Action Camera",
                            Price = 249.99m
                        });
                });

            modelBuilder.Entity("ClientPortal.Api.Models.Order", b =>
                {
                    b.HasOne("ClientPortal.Api.Models.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("FK__Orders__ClientId__5165187F");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("ClientPortal.Api.Models.OrderItem", b =>
                {
                    b.HasOne("ClientPortal.Api.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderItem__Order__5441852A");

                    b.HasOne("ClientPortal.Api.Models.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderItem__Produ__5535A963");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ClientPortal.Api.Models.Client", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ClientPortal.Api.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("ClientPortal.Api.Models.Product", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
